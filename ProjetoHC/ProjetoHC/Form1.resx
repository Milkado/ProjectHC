<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnCreate.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGkAAAAlCAYAAABBGMctAAAABGdBTUEAALGeYUxB9wAAACBjSFJNAACH
        EAAAjBIAAP1NAACBPgAAWesAARIPAAA85gAAGc66ySIyAAABK2lDQ1BQaG90b3Nob3AgSUNDIHByb2Zp
        bGUAACjPY2BgMnB0cXJlEmBgyM0rKQpyd1KIiIxSYD/PwMbAzAAGicnFBY4BAT4gdl5+XioDBvh2jYER
        RF/WBZnFQBrgSi4oKgHSf4DYKCW1OJmBgdEAyM4uLykAijPOAbJFkrLB7A0gdlFIkDOQfQTI5kuHsK+A
        2EkQ9hMQuwjoCSD7C0h9OpjNxAE2B8KWAbFLUitA9jI45xdUFmWmZ5QoGFpaWio4puQnpSoEVxaXpOYW
        K3jmJecXFeQXJZakpgDVQtwHBoIQhaAQ0wBqtNBkoDIAxQOE9TkQHL6MYmcQYgiQXFpUBmUyMhkT5iPM
        mCPBwOC/lIGB5Q9CzKSXgWGBDgMD/1SEmJohA4OAPgPDvjkAwMZP/eeaqagAAAAJcEhZcwAACxMAAAsT
        AQCanBgAAALpSURBVGhD7Zi/axRBFMf3ZmcvZRJIH1IGcnZGL1d44A/Qwoh2WmihImhhiJ16xj9ABLGI
        SdA2pBNUtBMC+bfG+b7dt+xtnnc3Z8hlzld8yMy878wl82FmN5c0D4+ccrZRSRGgkiJAJUWASooAlRQB
        KikCVFIEqKQIUEkRECQpSZJgTLstrqWMTrCk9PYdZ1/1nGmdo77d2KS+fb6RS1ledrb3xiXGuGRmJh9b
        vSCup4xGsKTsw0dqp9dvUL9abywuOvv0WZlNL19x6c31XFR7rS+rjE6wJJwatM2l7jFJVUjS1WvUNudX
        B2ZDsTt7rnGxTWuCRqsl5qaF8SV1Ovkmzc66ZG6uH4z5mlnrUDZ795761bXGBYJo7bv3XPb9J2G33orZ
        aWFsSen9B3S9JfPzxyX5MdSQQdb2tk5MEk6Q8deoVJtWwiW9fC3WBoE5JyEJp4Z+B38ypTrGUaercGGB
        TliytERj+MnzUMNJ5Hm4LiHerN/Ks5708ZOyjj7q+JntH5Tjp0W4JP/m1vx96LKv30YCWXrb83OlNUNg
        CZAl1dPNF+WGIosNxfWIGqRATr2NDP1dPk9zcH0Wn8Nz0SbJE7pWgyVl2zsu2/viJ+av1wPxGWQxB31p
        zRBYAvdps4vPwsZynSVCAJ8AhsfLOf7EQADG0cep4izWwzhlJ/jcC5e0+9lln3apbVZWnOl2ZXyN8j6L
        OWhLa4bwt+sOY9jQukRsPiRBSr1GzzZ/vUEKRLG4qhipPQnCJfkrAHBbyoFqhttSLhQ6GcXVA2ksDptY
        F0HjEOAzfKK4xlmAOl9xkEXPMsydBkn8pieBWj0v5caBryisCXAa8Pzgje7LFRmWBCFc53Huc4b/B+Mr
        jtq103uaRCnpfyNYUvPHL4IEFF8RSaBWz0s5ZTjBkuzDRwTa/GWrBGr1vLSmMpxgSf+CtKYynCBJymRQ
        SRGgkiJAJUWASooAlRQBKikCVFIEqKQIUEkRoJLOPEfuD/0sVudSg3ltAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnDelete.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/7gAOQWRvYmUAZAAAAAAB/+EFvkV4aWYAAE1NACoAAAAIAAcBEgAD
        AAAAAQABAAABGgAFAAAAAQAAAGIBGwAFAAAAAQAAAGoBKAADAAAAAQACAAABMQACAAAAHgAAAHIBMgAC
        AAAAFAAAAJCHaQAEAAAAAQAAAKQAAADEAEgAAAABAAAASAAAAAEAAEFkb2JlIFBob3Rvc2hvcCBDUzYg
        KFdpbmRvd3MpADIwMTg6MTE6MTMgMTM6NTI6MDgAAAKgAgAEAAAAAQAAAGmgAwAEAAAAAQAAACUAAAAA
        AAAABgEDAAMAAAABAAYAAAEaAAUAAAABAAABEgEbAAUAAAABAAABGgEoAAMAAAABAAIAAAIBAAQAAAAB
        AAABIgICAAQAAAABAAAElAAAAAAAAABIAAAAAQAAAEgAAAAB/9j/7QAMQWRvYmVfQ00AAf/uAA5BZG9i
        ZQBkgAAAAAH/2wCEAAwICAgJCAwJCQwRCwoLERUPDAwPFRgTExUTExgRDAwMDAwMEQwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwBDQsLDQ4NEA4OEBQODg4UFA4ODg4UEQwMDAwMEREMDAwMDAwRDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/AABEIACUAaQMBIgACEQEDEQH/3QAEAAf/xAE/AAABBQEBAQEB
        AQAAAAAAAAADAAECBAUGBwgJCgsBAAEFAQEBAQEBAAAAAAAAAAEAAgMEBQYHCAkKCxAAAQQBAwIEAgUH
        BggFAwwzAQACEQMEIRIxBUFRYRMicYEyBhSRobFCIyQVUsFiMzRygtFDByWSU/Dh8WNzNRaisoMmRJNU
        ZEXCo3Q2F9JV4mXys4TD03Xj80YnlKSFtJXE1OT0pbXF1eX1VmZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3
        EQACAgECBAQDBAUGBwcGBTUBAAIRAyExEgRBUWFxIhMFMoGRFKGxQiPBUtHwMyRi4XKCkkNTFWNzNPEl
        BhaisoMHJjXC0kSTVKMXZEVVNnRl4vKzhMPTdePzRpSkhbSVxNTk9KW1xdXl9VZmdoaWprbG1ub2JzdH
        V2d3h5ent8f/2gAMAwEAAhEDEQA/ADJJLCy+q9ayLcrC6bh7bcd4Yb/VrMA+9pbXa3b+lq/zFqSkI734
        ULeIw4JZSRExiI0ZSnKOOMIk8PEeJ3UlzdfVPrH06m27qOL9oplux5tpY5u4+nB9Bvv32Ob+aukQjMS6
        EV0kKTm5eWKrlCcZWIzxyjkgeHh4vl/d4/0lJJnODWlx4aCT8lXwc05lTbhRZTW9rX1us2e4OG5sCq21
        30f3069aYhEmJl0Gh+rZSSQsXJryqfWrBDdz2e7ma3Opd4/nMS8FUaJrQED7UqSix5cXAtLdrokxroDu
        bH5qkkgilJJJIqUkknSU/wD/0DLl7v8Almz/ANOWN/55sXULLu6RljMuysPMGP8AaC11jH1Nt9zRsDmO
        c5m32rSyRJ4aF0beN5PLCBycUhHjhwxMuLhviif0Izeab/ye3/wjR/7eFdysezovUMhopys9r8eWl9bM
        dtZIY4WNYLA92z3tWwhigY3Y6AfYv57PDLw8MhI8U5nh4qHH7fD/ADkMf7jG1pdW9o5LSB8wsTHwMkdL
        ZiDGuqyWtpb6ttoexj2f9qKG/aL9no/S9Ouur1P5pbqSfKIJv6NfHnljBAA1lGevFvDb5ZOLjYF1dlZy
        sP7Q1rWtGrHbLQ97rsz9K9v9J3Mt3/0j8xB/Z3UasfKY2g2OyqLqQGuYNpdblW1ufve322V5LPo/210C
        Sb7Q7lk++5LPpibIJHqr0fL+k4o6TfZkN+0VB9H2t1rwSCCz7M2hriJ/07dm3/0WtpJJOjERuurFlzSy
        cPFXoHCAFJJJIsakkkklP//RMkvJElqvBvraS8kSSU+tpLyRJFT62kvJEkFPraS8kSSU+tpLyRJJT62k
        vJEklP8A/9n/4gJASUNDX1BST0ZJTEUAAQEAAAIwQURCRQIQAABtbnRyUkdCIFhZWiAHzwAGAAMAAAAA
        AABhY3NwQVBQTAAAAABub25lAAAAAAAAAAAAAAAAAAAAAAAA9tYAAQAAAADTLUFEQkUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApjcHJ0AAAA/AAAADJkZXNjAAABMAAA
        AGt3dHB0AAABnAAAABRia3B0AAABsAAAABRyVFJDAAABxAAAAA5nVFJDAAAB1AAAAA5iVFJDAAAB5AAA
        AA5yWFlaAAAB9AAAABRnWFlaAAACCAAAABRiWFlaAAACHAAAABR0ZXh0AAAAAENvcHlyaWdodCAxOTk5
        IEFkb2JlIFN5c3RlbXMgSW5jb3Jwb3JhdGVkAAAAZGVzYwAAAAAAAAARQWRvYmUgUkdCICgxOTk4KQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAWFlaIAAAAAAAAPNRAAEAAAABFsxYWVogAAAAAAAAAAAAAAAAAAAAAGN1
        cnYAAAAAAAAAAQIzAABjdXJ2AAAAAAAAAAECMwAAY3VydgAAAAAAAAABAjMAAFhZWiAAAAAAAACcGAAA
        T6UAAAT8WFlaIAAAAAAAADSNAACgLAAAD5VYWVogAAAAAAAAJjEAABAvAAC+nP/bAEMAAgICAgICAgIC
        AgMCAgIDBAMCAgMEBQQEBAQEBQYFBQUFBQUGBgcHCAcHBgkJCgoJCQwMDAwMDAwMDAwMDAwMDP/bAEMB
        AwMDBQQFCQYGCQ0KCQoNDw4ODg4PDwwMDAwMDw8MDAwMDAwPDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDP/AABEIACUAaQMBEQACEQEDEQH/xAAfAAAABwEBAQEBAAAAAAAAAAAEBQMCBgEABwgJCgv/xAC1
        EAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRT
        kqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpam
        tsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6vr/
        xAAfAQACAgMBAQEBAQAAAAAAAAABAAIDBAUGBwgJCgv/xAC1EQACAgECAwUFBAUGBAgDA20BAAIRAwQh
        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
</value>
  </data>
</root>